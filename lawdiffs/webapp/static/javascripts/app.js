// Generated by CoffeeScript 1.6.3
(function() {
  var APP_NAME, DIRECTIVE_MODULE, SERVICES_MODULE, app;

  APP_NAME = 'myLilApp';

  DIRECTIVE_MODULE = "" + APP_NAME + ".directives";

  SERVICES_MODULE = "" + APP_NAME + ".directives";

  angular.module(DIRECTIVE_MODULE, []);

  angular.module(SERVICES_MODULE, []);

  angular.module(DIRECTIVE_MODULE).directive('topNavbar', function($location) {
    var directive;
    return directive = {
      replace: true,
      template: "<div class=\"navbar\">\n    <div class=\"navbar-inner\">\n        <a class=\"brand\" href=\"#\">{{appName}}</a>\n        <ul class=\"nav\">\n            <li ng-repeat=\"link in navLinks\"\n                ng-class=\"{active: currentPath == link.href}\">\n                    <a href=\"{{link.href}}\">{{link.title}}</a>\n            </li>\n        </ul>\n    </div>\n</div>",
      link: function(scope) {
        scope.navLinks = [
          {
            href: '/',
            title: 'Home'
          }
        ];
        return scope.$on("$routeChangeSuccess", function(e, current, previous) {
          return scope.currentPath = $location.path();
        });
      }
    };
  });

  angular.module(DIRECTIVE_MODULE).directive('userFeedback', function() {
    var directive;
    return directive = {
      replace: true,
      scope: true,
      template: "<div class=\"row\" ng-show=\"m.html\">\n    <div data-alert class=\"small-12 columns alert-box\">\n        {{m.html}}\n        <a href=\"#\" class=\"close\">&times;</a>\n    </div>\n</div>",
      link: function(scope) {
        var setFeedback;
        scope.m = {};
        scope.showUserFeedback = false;
        setFeedback = function(html, alertClass, iconClass) {
          scope.m.html = html;
          scope.m.alertClass = alertClass;
          return scope.m.iconClass = iconClass;
        };
        scope.$on('feedback', function(html, alertClass, iconClass) {
          return setFeedback(html, alertClass, iconClass);
        });
        scope.$on('successFeedback', function(e, html) {
          return setFeedback(html, 'alert-success', 'icon-thumbs-up');
        });
        scope.$on('errorFeedback', function(e, html) {
          return setFeedback(html, 'alert-error', 'icon-exclamation-sign');
        });
        scope.$on('warnFeedback', function(e, html) {
          console.log('here');
          return setFeedback(html, '', 'icon-info-sign');
        });
        return scope.$on('clearFeedback', function(e) {
          return setFeedback(null, '', '');
        });
      }
    };
  });

  angular.module(SERVICES_MODULE).factory('Laws', function($http, $q, UrlBuilder) {
    var Laws;
    Laws = (function() {
      function Laws() {}

      Laws.prototype.fetchAll = function() {
        return $http.get(UrlBuilder.apiUrl('/laws/ors'));
      };

      Laws.prototype.fetchLaw = function(version, section) {
        return $http.get(UrlBuilder.apiUrl("/law/ors/" + version + "/" + section));
      };

      Laws.prototype.fetchDiff = function(lawCode, section, version1, version2) {
        return $http.get(UrlBuilder.apiUrl("/diff/" + lawCode + "/" + section + "/" + version1 + "/" + version2));
      };

      return Laws;

    })();
    return new Laws();
  });

  angular.module(SERVICES_MODULE).factory('UrlBuilder', function() {
    var UrlBuilder;
    UrlBuilder = (function() {
      function UrlBuilder() {}

      UrlBuilder.prototype.API_PREFIX = '/api';

      UrlBuilder.prototype.apiUrl = function(url) {
        return this.API_PREFIX + url;
      };

      UrlBuilder.prototype.diffPage = function(lawCode, subsection, version1, version2) {
        return "/diff/" + lawCode + "/" + subsection + "/" + version1 + "/" + version2;
      };

      return UrlBuilder;

    })();
    return new UrlBuilder();
  });

  app = angular.module(APP_NAME, [DIRECTIVE_MODULE, SERVICES_MODULE]).run(function($route, $location, $rootScope) {
    return $rootScope.appName = "My Lil' App";
  });

  angular.module('myLilApp').controller('HomeCtrl', function($scope, $rootScope, $http, $routeParams, Laws) {
    return console.log('HomeCtrl');
  });

  angular.module('myLilApp').config([
    '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
      $routeProvider.when('/', {
        controller: 'ViewerCtrl',
        templateUrl: '/static/partials/home.html'
      }).when('/view', {
        controller: 'ViewerCtrl',
        templateUrl: '/static/partials/home.html'
      }).when('/view/:lawCode', {
        redirectTo: '/'
      }).when('/view/:lawCode/:param', {
        redirectTo: '/'
      }).when('/view/:lawCode/:version/:section', {
        controller: 'ViewerCtrl',
        templateUrl: '/static/partials/home.html'
      }).when('/diff/:lawCode/:subsection/:version1/:version2', {
        controller: 'DiffCtrl',
        templateUrl: '/static/partials/diff.html'
      }).otherwise({
        redirectTo: '/'
      });
      return $locationProvider.html5Mode(true).hashPrefix('!');
    }
  ]);

  angular.module(SERVICES_MODULE).factory('ExternalReferences', function() {
    var ExternalReferences;
    ExternalReferences = (function() {
      function ExternalReferences() {}

      ExternalReferences.prototype.orsVersionPaths = {
        2001: '/ors_archives/2001ORS'
      };

      ExternalReferences.prototype.sourceLink = function(lawCode, version, subsection) {
        var url;
        if (lawCode === 'ors') {
          return url = 'http://www.leg.state.or.us/ors/';
        }
      };

      return ExternalReferences;

    })();
    return new ExternalReferences;
  });

  angular.module('myLilApp').controller('DiffCtrl', function($route, $scope, $rootScope, $http, $routeParams, $location, Laws, UrlBuilder, Sorter) {
    var updateLegendDiffLines;
    $scope.m = {};
    updateLegendDiffLines = function() {
      var version1, version2;
      version1 = $routeParams.version1;
      version2 = $routeParams.version2;
      return $scope.legendDiffLines = ["- Text removed between " + version1 + " and " + version2, "+ Text added between " + version1 + " and " + version2];
    };
    $scope.versionChange = function() {
      $scope.$broadcast('clearFeedback');
      if ($scope.m.version1 === $scope.m.version2) {
        $scope.$broadcast('warnFeedback', 'You must choose different versions to compare.');
        $scope.showUpdateButton = false;
        return;
      }
      return $scope.showUpdateButton = $scope.m.version1 !== $routeParams.version1 || $scope.m.version2 !== $routeParams.version2;
    };
    $scope.updatePath = function() {
      var path;
      path = UrlBuilder.diffPage($scope.lawCode, $scope.subsection, $scope.m.version1, $scope.m.version2);
      return $location.path(path);
    };
    if ($routeParams.version2) {
      $scope.lawCode = $routeParams.lawCode;
      $scope.subsection = $routeParams.subsection;
      $scope.m.version1 = $routeParams.version1;
      $scope.m.version2 = $routeParams.version2;
      $scope.currentVersion1 = $routeParams.version1;
      $scope.currentVersion2 = $routeParams.version2;
      return Laws.fetchDiff($scope.lawCode, $scope.subsection, $scope.m.version1, $scope.m.version2).then(function(response) {
        $scope.diffText = response.data.diff;
        $scope.diffLines = response.data.lines;
        $scope.nextSubsection = response.data.next;
        $scope.prevSubsection = response.data.prev;
        $scope.version2Title = response.data.version2_title;
        $scope.availableVersions = Sorter.sortVersions(response.data.versions);
        return updateLegendDiffLines();
      });
    } else {
      return fetchLaws();
    }
  });

  angular.module('myLilApp').controller('ViewerCtrl', function($route, $scope, $rootScope, $http, $routeParams, $location, Laws, UrlBuilder) {
    var fetchAllLaws, fetchAndApplyLaw, fetchedLaws;
    console.log('ViewerCtrl');
    $scope.m = {};
    fetchedLaws = false;
    fetchAllLaws = function() {
      return Laws.fetchAll().then(function(response) {
        var laws;
        laws = _.sortBy(response.data, function(law) {
          return law.subsection;
        });
        return $scope.allLaws = laws;
      });
    };
    fetchAndApplyLaw = function(version, section) {
      return Laws.fetchLaw(version, section).then(function(response) {
        $scope.activeText = response.data.text;
        $scope.activeTitle = response.data.title;
        return $scope.availableVersions = response.data.versions.sort(function(a, b) {
          return parseInt(b) - parseInt(a);
        });
      });
    };
    $scope.chooseLaw = function(law) {
      $scope.currentLaw = law;
      $scope.hideSearchList = true;
      $scope.m.primaryYear = _.max(law.versions);
      return fetchAndApplyLaw(law.id, $scope.m.primaryYear);
    };
    $scope.lawFilterChange = function() {
      $scope.hideSearchList = false;
      if (!fetchedLaws) {
        fetchAllLaws();
        return fetchedLaws = true;
      }
    };
    $scope.diffMe = function() {
      var url;
      url = UrlBuilder.diffPage('ors', $scope.activeSection, $scope.availableVersions[$scope.availableVersions.length - 1], $scope.availableVersions[0]);
      return $location.path(url);
    };
    $scope.choosePrimaryYear = function(year) {
      return $scope.m.primaryYear = year;
    };
    $scope.selectedVersionChange = function(version) {
      return $location.path("/view/ors/" + version + "/" + $scope.activeSection);
    };
    if ($routeParams.section) {
      $scope.activeVersion = $routeParams.version;
      $scope.m.selectedVersion = $routeParams.version;
      $scope.activeSection = $routeParams.section;
      return fetchAndApplyLaw($scope.activeVersion, $scope.activeSection);
    } else {
      $scope.m.selectedVersion = 2011;
      return fetchAllLaws();
    }
  });

  angular.module(DIRECTIVE_MODULE).directive('inlineDiff', function() {
    var directive;
    return directive = {
      scope: {
        lines: '='
      },
      replace: true,
      template: "<div class=\"diff-container\">\n    <div ng-repeat=\"line in lines\" inline-diff-line line=\"line\" first=\"$first\"></div>\n</div>",
      link: function(scope) {}
    };
  });

  angular.module(DIRECTIVE_MODULE).directive('inlineDiffLine', function() {
    var directive;
    return directive = {
      scope: {
        line: '=',
        first: '='
      },
      replace: true,
      template: "<table class=\"diff-line-table\">\n    <tr ng-class=\"diffClass\">\n        <td class=\"plus-minus\">{{plusMinus}}</td>\n        <td class=\"diff-text\"><pre>{{text}}</pre></td>\n    </tr>\n</table>",
      link: function(scope) {
        var diffClass, firstChar;
        firstChar = scope.line.charAt(0);
        diffClass = '';
        if (firstChar === '-') {
          diffClass = 'diff-subtraction';
          scope.plusMinus = '-';
          scope.text = scope.line.substring(1);
        } else if (firstChar === '+') {
          diffClass = 'diff-addition';
          scope.plusMinus = '+';
          scope.text = scope.line.substring(1);
        } else {
          scope.text = scope.line;
        }
        if (scope.first) {
          diffClass += ' first-line';
        }
        return scope.diffClass = diffClass;
      }
    };
  });

  angular.module(DIRECTIVE_MODULE).directive('lawHeader', function() {
    var directive;
    return directive = {
      replace: true,
      restrict: 'A',
      template: "<div class=\"law-title\">\n    <div>\n        <h4>\n            {{code | uppercase}} {{subsection}}.\n            <span class=\"subheader\">{{title}}</span>\n        </h4>\n    </div>\n</div>",
      link: function(scope, elem, attrs) {
        attrs.$observe('title', function(title) {
          return scope.title = title;
        });
        attrs.$observe('subsection', function(subsection) {
          return scope.subsection = subsection;
        });
        return attrs.$observe('code', function(code) {
          return scope.code = code;
        });
      }
    };
  });

  angular.module(SERVICES_MODULE).factory('Sorter', function() {
    var Sorter;
    Sorter = (function() {
      function Sorter() {}

      Sorter.prototype.sortVersions = function(versions) {
        return versions.sort(function(a, b) {
          return parseInt(b) - parseInt(a);
        });
      };

      return Sorter;

    })();
    return new Sorter();
  });

  angular.module(DIRECTIVE_MODULE).directive('diffLegend', function() {
    var directive;
    return directive = {
      scope: {
        vOne: '=',
        vTwo: '='
      },
      replace: true,
      template: "<div>\n    <div class=\"diff-legend-header\">\n        <table>\n            <thead>\n                <tr>\n                    <th>Legend</th>\n                </tr>\n            </thead>\n        </table>\n    </div>\n    <div class=\"diff-container\">\n        <div ng-repeat=\"line in lines\" inline-diff-line line=\"line\"></div>\n    </div>\n</div>",
      link: function(scope) {
        return scope.lines = ["- (Text removed between " + scope.vOne + " and " + scope.vTwo + ")", "+ (Text added between " + scope.vOne + " and " + scope.vTwo + ")"];
      }
    };
  });

}).call(this);
